worker_processes  1;

events {
    worker_connections  1024;
}

http {
    server {
        listen 80;
        server_name  localhost;

        ## start security options 
        # only allows get, head, post   
        if ($request_method !~ ^(GET|HEAD|POST|OPTIONS)$ )
        {
            return 405;
        }
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options nosniff;
        server_tokens off; # removes nginx version send to client
        ## end security options

        root   /usr/share/nginx/html;
        index  index.html index.htm;
        include /etc/nginx/mime.types;

        gzip on;
        gzip_min_length 1000;
        gzip_proxied expired no-cache no-store private auth;
        gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

        # Deployment
        # location / {
        #     try_files $uri $uri/ /index.html; # serves SPA
        # }

        # Develop
        location / {
            proxy_pass       http://localhost:4200;
            proxy_set_header Upgrade    $http_upgrade;
            proxy_set_header Connection $http_connection;
            proxy_set_header Host       $host;
            proxy_http_version 1.1;
        }
        # backend will be resolved by the docker-compose network
        location /backend {
            proxy_pass http://backend:3000/;
            proxy_intercept_errors on;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass_request_headers on;
            proxy_http_version 1.1;
        }
    }
}